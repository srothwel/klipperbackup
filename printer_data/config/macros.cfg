[gcode_macro G32]
gcode:
    #STATUS_LEVELING
    SAVE_GCODE_STATE NAME=STATE_G32
    #G90
    #G28
    #QUAD_GANTRY_LEVEL
    #G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
   #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
    STATUS_READY
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    STATUS_HOMING 
    G28                            ; home all axes
    G90                            ; absolute positioning
    G0 Z20 F3000                   ; move nozzle away from bed 
                              # collect probe
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    #STATUS_CLEANING
    #CLEAN_NOZZLE
    #G28
#    STATUS_READY
    #G90
    #G0 z=3
    #CALIBRATE_Z
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE METHOD=rapid_scan
    CLEAN_NOZZLE
    PRIME_LINE
    #SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5 F1800                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  
[gcode_macro CENTRE_BED]
description: Move to the centre of the bed
gcode:
    G90
    G0 Z20
    G1 X150 Y150 F7800

[gcode_macro FRONT_CENTRE]
description: move to the front and centre
gcode:
    G90
    G0 Z150
    G1 X150 Y0 F2800

[gcode_macro CUT_TIP]
description: cut filament tip
gcode:
    G90
    G1 X16 Y299 Z25 F2800 # move into position
    G1 X1 Y299 Z25 F1800
    G1 X16 Y299 Z25 F1800

[gcode_macro PRIME_LINE]
gcode:
    G92 E0 ; reset extruder
    G1 Z2.0 F3000 ; Move Z Axis up a little to prevent scratching
    G1 X10 Y290 Z0.3 F5000.0; Move to start position
    G1 X10 Y100.0 Z0.3 F750.0 E18 ; Draw Priming Line
    G92 E0 ; reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up to prevent scratching

    
#[filament_motion_sensor btt_smartie]
#detection_length: 30.0
#extruder: extruder
#switch_pin: ^PB14
#runout_gcode: FILAMENT_RUNOUT

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M300 S1 P10
    M600
    M300 S1 P10

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
#       SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
#   SET_PIN PIN=BEEPER VALUE=0

[gcode_macro M600]
gcode:
    {% set X = params.X|default(25)|float %}
    {% set Y = params.Y|default(25)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-15 F1000
        RESTORE_GCODE_STATE NAME=M600_state

[bed_mesh]
#speed: 120
#horizontal_move_z: 20
#mesh_min: 7, 30
#mesh_max: 290, 280
#probe_count: 3, 3
#relative_reference_index: 4

#[z_calibration]
#nozzle_xy_position:   201,294       #<X,Y position for clicking the nozzle on the Z endstop>
#switch_xy_position:   204,273   #<X,Y position for clicking the probe's switch body on the Z endstop>
#bed_xy_position:      150,150       #<X,Y position for probing the bed, for instance the center point>
#switch_offset:        0.5         #<offset of the switch trigger (read the Switch Offset section!) the higher the number the closer to the bed>
#start_gcode:          M401          #<macro name for attaching the probe>
#                                    #before_switch_gcode: <macro name for attaching the probe AFTER probing the nozzle>
#end_gcode:            M402         #<macro name for docking the probe>
#max_deviation: 10
#speed: 50
#probing_first_fast: false




#[gcode_macro CALIBRATE_Z]
#rename_existing: BASE_CALIBRATE_Z
#gcode:
#   {% set bed_position = params.BED_POSITION|default('None') %}
#   G28
#   M117 Z-Calibration..
#   #M401                # a macro for fetching the probe first
#     {% if bed_position != 'None' %}
#    BASE_CALIBRATE_Z BED_POSITION={bed_position}
#   {% else %}
#   BASE_CALIBRATE_Z
#   {% endif %}
##  M402                # and parking it afterwards (or DOCK_PROBE in klicky macros)
#   M117

#[z_calibration]
#nozzle_xy_position:  201,294 # <X,Y position for clicking the nozzle on the Z endstop>
#switch_xy_position:  204,273 #  <X,Y position for clicking the probe's switch body on the Z endstop>
#bed_xy_position:     150,150 # <X,Y position for probing the bed, for instance the center point>
#switch_offset:       0.4     # <offset of the switch trigger (read the Switch Offset section!)>
#start_gcode:         M401    # <macro name for attaching the probe>
#before_switch_gcode: <macro name for attaching the probe AFTER probing the nozzle>
#end_gcode:           M402    # <macro name for docking the probe>

[gcode_macro BEGIN]
gcode:
    G90
    STATUS_READY
    STATUS_HOMING    
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_CLEANING
    CLEAN_NOZZLE
    G28
    STATUS_LEVELING
    BED_MESH_CLEAR
    M117
    bed_mesh_calibrate
    STATUS_READY
    G28
    G90
    #STATUS_CLEANING
    #CLEAN_NOZZLE
    #CALIBRATE_Z
    #STATUS_READY
    #LINE_PURGE
    #CENTRE_BED
    

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}
#[gcode_macro RESUME]
#description: Resume the actual running print
#rename_existing: RESUME_BASE
#gcode:
#  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
#  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
#  #### get VELOCITY parameter if specified ####
#  {% if 'VELOCITY' in params|upper %}
#    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#  {%else %}
#    {% set get_params = "" %}
#  {% endif %}
#  ##### end of definitions #####
#  {% if printer.extruder.can_extrude|lower == 'true' %}
#    M83
#    G1 E{extrude} F2100
#    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#  {% else %}
#    {action_respond_info("Extruder not hot enough")}
#  {% endif %}  
#  RESUME_BASE {get_params}

#[gcode_macro PAUSE]
#description: Pause the actual running print
#rename_existing: PAUSE_BASE
#gcode:
#  PAUSE_BASE
#  _TOOLHEAD_PARK_PAUSE_CANCEL
